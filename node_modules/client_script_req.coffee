# :mode=coffeescript:indentSize=2:noTabs=true:tabSize=2:
# handler for client script requests

path=require 'path'
url=require 'url'
fs=require 'fs'
proc=require 'child_process'

response=require 'response_helpers'

conf=require('module_conf').conf.modules.client_script_req

SRC_PATH=conf.src_path ? path.join process.cwd(),'./client_modules'
OUT_PATH=conf.out_path ? path.join process.cwd(),'./client_modules.out'

exports.handle=(req,res) ->
  query=url.parse(req.url,true).query
  if not query.name?
    response.bad_request req,res,'missing param name'
    return
  compiled_path=path.join OUT_PATH,query.name+'.js'
  src_path=path.join SRC_PATH,query.name+'.coffee'

  fs.stat src_path,(err,src_stats) ->
    if err
      response.not_found req,res,src_path
      return

    fs.stat compiled_path,(err,comp_stats) ->
      if err or src_stats.mtime>comp_stats.mtime
        console.info 'Recompiling '+src_path
        cmd_str='coffee -co '+OUT_PATH+' '+src_path
        proc.exec cmd_str,(err,stdout,stderr) ->
          if err
            response.error req,res,[err,stdout,stderr]
            return
          fs.readFile compiled_path,(err,data) ->
            if err
              response.error req,res,err
              return
            res.writeHead 200,'text/javascript'
            res.end data
      else
        fs.readFile compiled_path,(err,data) ->
          if err
            response.error req,res,err
            return
          res.writeHead 200,'text/javascript'
          res.end data

