# request handler registry

url=require 'url'

response=require 'response_helpers'

conf=require('module_conf').conf.modules.request_handler

handlers={}

get_handler=(name) ->
  throw new Error('Unknown request handler '+name) unless handlers[name]?
  return handlers[name]

default_handler=(req,res) ->
  response.not_found req,res

find_handler_method=(handler_str) ->
  modname=handler_str
  funcname='handle'
  if '?' in handler_str
    parts=handler_str.split '?'
    modname=parts[0]
    funcname=parts[1]

  obj=require modname
  if not obj[funcname]?
    throw new Error('Request handler '+modname+' has no '+funcname+' method')

  return obj[funcname]

exports.add=(pathname,handler) ->
  f=find_handler_method handler
  if handlers[pathname]?
    console.warn 'Overwriting request '+pathname+' with '+handler
  handlers[pathname]=f

exports.add_default=(handler) ->
  default_handler=find_handler_method handler

exports.remove=(pathname) ->
  handlers[pathname]=null

if conf.default_request?
  exports.add_default conf.default_request

for pathname,modname of conf.requests
  exports.add pathname,modname

global.on_server_request (req,res) ->
  console.log 'Request: '+req.method+' '+req.url
  (handlers[(url.parse req.url).pathname] ? default_handler)(req,res)

